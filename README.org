* nix void spaceport

#+begin_src
├───darwinConfigurations: unknown
├───devShell
│   ├───aarch64-darwin: development environment 'shell'
│   ├───aarch64-linux: development environment 'shell'
│   ├───x86_64-darwin: development environment 'shell'
│   └───x86_64-linux: development environment 'shell'
├───homeModules: unknown
├───nixosConfigurations
│   ├───frenz: NixOS configuration
│   ├───horus: NixOS configuration
│   ├───nasferatu: NixOS configuration
│   └───pad: NixOS configuration
└───nixosModules
    ├───core: NixOS module
    ├───gui: NixOS module
    ├───laptop: NixOS module
    ├───marrano-bot: NixOS module
    ├───network-manager: NixOS module
    ├───networking: NixOS module
    ├───openssh: NixOS module
    ├───secrets: NixOS module
    ├───torrent: NixOS module
    ├───users: NixOS module
    └───wsl: NixOS module
#+end_src

** launch procedures

*** voidship preflight

#+begin_src shell
deploy \
    --remote-build \
    --dry-activate \
    --keep-results \
    .#<host>
#+end_src

*** voidship launch

#+begin_src shell
deploy \
    --remote-build \
    .#<host>
#+end_src

** URLs

- [[/LnL7/nix-darwin]]
- [[/nix-community/NixOS-WSL]]
- [[/nix-community/haumea]]
- [[/nix-community/home-manager]]
- [[/nix-community/nix-direnv]]
- [[/numtide/devshell]]
- [[/numtide/flake-utils]]
- [[/numtide/treefmt-nix]]
- [[/serokell/deploy-rs]]
- [[/yaxitech/ragenix]]

** Cheat sheet

- fancy menu ~std~
- apply the current host configuration: ~colmena apply-local --node nixos-horus
  --sudo~
- apply an host: ~colmena apply -v --build-on-target --on nixos-nasferatu~
- apply on darwin: ~nix run nix-darwin -- switch --flake .#darwin-mwb --show-trace~

- ~deploy-rs~ to remotely deploy hosts
- ~nix flake show~ look at the outputs

** No more ~divnix/hive~?

As it stands the hive is simply over-shadowing most of the simplicity of nix
flakes, a good alternative is to use Haumea to load lazy derivations and include
them in the submodules, it's not as /clean/ but but the tracebacks are greatly
simplified.
